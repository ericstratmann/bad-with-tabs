// Generated by CoffeeScript 1.3.3
var Chrome, ChromeTab, ChromeWindow, Date;

Chrome = (function() {
  var _this = this;

  function Chrome() {}

  Chrome.prototype.tabs = {
    onCreated: {
      addListener: function(f) {
        return Chrome.listener = f;
      }
    },
    onAttached: {
      addListener: function(f) {
        return Chrome.listener = f;
      }
    },
    onRemoved: {
      addListener: function(f) {
        return Chrome.listener = f;
      }
    },
    onSelectionChanged: {
      addListener: function(f) {
        return Chrome.listener = f;
      }
    },
    remove: function() {
      return null;
    }
  };

  Chrome.prototype.windows = {
    onRemoved: {
      addListener: function(f) {
        return Chrome.listener = f;
      }
    },
    getAll: function(opts, f) {}
  };

  return Chrome;

}).call(this);

ChromeWindow = (function() {

  function ChromeWindow(id) {
    this.id = id;
  }

  return ChromeWindow;

})();

ChromeTab = (function() {

  function ChromeTab(id) {
    this.id = id;
  }

  return ChromeTab;

})();

Date = (function() {

  function Date() {}

  Date.prototype.getTime = function() {
    return Date.time;
  };

  Date.setTime = function(time) {
    return this.time = time;
  };

  return Date;

})();

describe("Tabs", function() {
  it("set their id properly", function() {
    var tab1, tab2;
    tab1 = new Tab(new ChromeTab(1));
    tab2 = new Tab(new ChromeTab(2));
    expect(tab1.id).toBe(1);
    return expect(tab2.id).toBe(2);
  });
  it("can have their window set", function() {
    var tab;
    tab = new Tab(new ChromeTab(3));
    tab.setWindow(new ChromeWindow(4));
    return expect(tab.window.id).toBe(4);
  });
  return it("can update their last access time", function() {
    var tab;
    Date.setTime(5);
    tab = new Tab(new ChromeTab(4));
    expect(tab.lastAccess).toBe(5);
    Date.setTime(6);
    tab.updateLastAccess();
    return expect(tab.lastAccess).toBe(6);
  });
});
